image: node:12.13.0-alpine

definitions:
  scripts:
    - script: &tools_install
        apk update;
        apk upgrade;
        apk add --no-cache bash jq;
        apk add --no-cache  python3;
        pip3 install --upgrade pip; 
        pip3 install --no-cache-dir  awscli;
        npm install -g @angular/core@9.1.0;
        npm install -g @angular/cli@9.1.0;

pipelines:
  default:
    - parallel:
      - step:
          image: golang:1.17
          name: 'Security scan'
          script:
            - GO111MODULE=on go get github.com/zricethezav/gitleaks/v7
            - gitleaks --additional-config=gitleaks.toml --path=. --verbose --redact --no-git

      - step:
          image: python:3.8
          name: "Bandit" 
          script:
            - python --version
            - pip install virtualenv
            - virtualenv venv
            - source venv/bin/activate
            - pip install -r ./bitbucket-requirements.txt
            - bandit -r . --exclude ./venv

      # - step:
      #     image: node:12.13.0
      #     name: "npm-audit"
      #     script:
      #       - npm install
      #       - npm audit
      - step:
            image: python:3.8
            name: "NJSscan"
            script:
              - python --version
              - pip install --upgrade njsscan
              - njsscan .
      - step:
          name: "Deploy dev2" 
          deployment: skpi-dev-iad2
          trigger: 'manual'
          size: 2x
          script: 
            - *tools_install
            - npm install
            - rm -rf ./node_modules/@coreui/angular
            - cp -r ./lib/angular ./node_modules/@coreui/angular
            - ng build -c dev
            - export backup_folder=$(date +%Y-%m-%d)-$BITBUCKET_BUILD_NUMBER
            - export APP_BUCKET="portal.dev.successkpi.net"
            - export BACKUP_BUCKET="portal.dev.successkpi.net-backup"
            - export DISTRIBUTION_ID="E2YJ3N5DX22WEW"
            - aws s3 cp --recursive s3://$APP_BUCKET s3://$BACKUP_BUCKET/$backup_folder
            - aws s3 rm --recursive s3://$APP_BUCKET
            - aws s3 cp --recursive ./dist s3://$APP_BUCKET
            - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
           
      - step:
          name: "Deploy dev" 
          deployment: skpi-dev-iad1
          trigger: 'manual'
          size: 2x
          script: 
            - *tools_install
            - npm install
            - rm -rf ./node_modules/@coreui/angular
            - cp -r ./lib/angular ./node_modules/@coreui/angular
            - ng build
            - export backup_folder=$(date +%Y-%m-%d)-$BITBUCKET_BUILD_NUMBER
            - export APP_BUCKET="successkpi-new-dev"
            # TODO backup bucket
            - export BACKUP_BUCKET=""
            - export DISTRIBUTION_ID="EQL3AHYY8WCE1"
            # - aws s3 cp --recursive s3://$APP_BUCKET s3://$BACKUP_BUCKET/$backup_folder
            - aws s3 rm --recursive s3://$APP_BUCKET
            - aws s3 cp --recursive ./dist s3://$APP_BUCKET
            - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"


    - step:
        name: "Deploy QA" 
        deployment: skpi-qa-iad1
        trigger: 'manual'
        size: 2x
        script: 
          - *tools_install
          - npm install
          - rm -rf ./node_modules/@coreui/angular
          - cp -r ./lib/angular ./node_modules/@coreui/angular
          - ng build -c qa
          - export backup_folder=$(date +%Y-%m-%d)-$BITBUCKET_BUILD_NUMBER
          - export APP_BUCKET="portal.qa.successkpi.net"
          - export BACKUP_BUCKET="portal.qa.successkpi.net-backup"
          - export DISTRIBUTION_ID="E1QFHD79C9B7I5"
          - aws s3 cp --recursive s3://$APP_BUCKET s3://$BACKUP_BUCKET/$backup_folder
          - aws s3 rm --recursive s3://$APP_BUCKET
          - aws s3 cp --recursive ./dist s3://$APP_BUCKET
          - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

  pull-requests:
    '**':
        - parallel:
          - step:
              image: golang:1.17
              name: 'Security scan'
              script:
                - GO111MODULE=on go get github.com/zricethezav/gitleaks/v7
                - gitleaks --additional-config=gitleaks.toml --path=. --verbose --redact --no-git

          - step:
              image: python:3.8
              name: "Bandit" 
              script:
                - python --version
                - pip install virtualenv
                - virtualenv venv
                - source venv/bin/activate
                - pip install -r ./bitbucket-requirements.txt
                - bandit -r . --exclude ./venv

          - step:
              image: node:12.13.0
              name: "npm-audit"
              script:
                - npm install
                - npm audit
          - step:
                image: python:3.8
                name: "NJSscan"
                script:
                  - python --version
                  - pip install --upgrade njsscan
                  - njsscan .
          - step:
              name: "Deploy dev2" 
              deployment: skpi-dev-iad2
              trigger: 'manual'
              size: 2x
              script: 
                - *tools_install
                - npm install
                - rm -rf ./node_modules/@coreui/angular
                - cp -r ./lib/angular ./node_modules/@coreui/angular
                - ng build
                - export backup_folder=$(date +%Y-%m-%d)-$BITBUCKET_BUILD_NUMBER
                - export APP_BUCKET="portal.dev.successkpi.net"
                - export BACKUP_BUCKET="portal.dev.successkpi.net-backup"
                - export DISTRIBUTION_ID="E2YJ3N5DX22WEW"
                - aws s3 cp --recursive s3://$APP_BUCKET s3://$BACKUP_BUCKET/$backup_folder
                - aws s3 rm --recursive s3://$APP_BUCKET
                - aws s3 cp --recursive ./dist s3://$APP_BUCKET
                - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

  branches:
    'release/*':
        - step:
            name: "Deploy dev2" 
            deployment: skpi-dev-iad2
            trigger: 'manual'
            size: 2x
            script: 
              - *tools_install
              - npm install
              - rm -rf ./node_modules/@coreui/angular
              - cp -r ./lib/angular ./node_modules/@coreui/angular
              - ng build -c dev
              - export backup_folder=$(date +%Y-%m-%d)-$BITBUCKET_BUILD_NUMBER
              - export APP_BUCKET="portal.dev.successkpi.net"
              - export BACKUP_BUCKET="portal.dev.successkpi.net-backup"
              - export DISTRIBUTION_ID="E2YJ3N5DX22WEW"
              - aws s3 cp --recursive s3://$APP_BUCKET s3://$BACKUP_BUCKET/$backup_folder
              - aws s3 rm --recursive s3://$APP_BUCKET
              - aws s3 cp --recursive ./dist s3://$APP_BUCKET
              - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

        - step:
            name: prod-fra
            deployment: skpi-prod-fra1
            trigger: 'manual'
            size: 2x
            script:
              - *tools_install
              - npm install
              - rm -rf ./node_modules/@coreui/angular
              - cp -r ./lib/angular ./node_modules/@coreui/angular
              - ng build -c fra
              - export backup_folder=$(date +%Y-%m-%d)-$BITBUCKET_BUILD_NUMBER
              - export APP_BUCKET="fra-euc1.successkpi.de"
              - export BACKUP_BUCKET="skpi-fra-ui-backup"
              - export DISTRIBUTION_ID="E6WN4D6JIFNHC"
              - aws s3 cp --recursive s3://$APP_BUCKET s3://$BACKUP_BUCKET/skpiui/$backup_folder
              - aws s3 rm --recursive s3://$APP_BUCKET
              - aws s3 cp --recursive ./dist s3://$APP_BUCKET
              - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        
        - step:
            name: prod-gov2
            deployment: skpi-gov-pdx1
            trigger: 'manual'
            size: 2x
            script:
              - *tools_install
              - npm install
              - rm -rf ./node_modules/@coreui/angular
              - cp -r ./lib/angular ./node_modules/@coreui/angular
              - ng build -c gov2
              - export backup_folder=$(date +%Y-%m-%d)-$BITBUCKET_BUILD_NUMBER
              - export APP_BUCKET="gov.usw2.successkpi.com"
              - export BACKUP_BUCKET="skpi-gov2-backup-ui"
              - export DISTRIBUTION_ID="E1I3QXPJWXLP5O"
              - aws s3 cp --recursive s3://$APP_BUCKET s3://$BACKUP_BUCKET/skpiui/$backup_folder
              - aws s3 rm --recursive s3://$APP_BUCKET
              - aws s3 cp --recursive ./dist s3://$APP_BUCKET
              - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

        # - step:
        #     name: prod-main
        #     deployment: skpi-prod-iad1
        #     trigger: 'manual'
        #     size: 2x
        #     script:
        #       - *tools_install
        #       - npm install
        #       - rm -rf ./node_modules/@coreui/angular
        #       - cp -r ./lib/angular ./node_modules/@coreui/angular
        #       - ng build -c mainUS
        #       - export backup_folder=$(date +%Y-%m-%d)-$BITBUCKET_BUILD_NUMBER
        #       - export APP_BUCKET="portal.successkpis.com"
        #       - export BACKUP_BUCKET="backup-ui-files"
        #       - export DISTRIBUTION_ID="E34I9TB2CTMM7Q"
        #       - aws s3 cp --recursive s3://$APP_BUCKET s3://$BACKUP_BUCKET/skpiui/$backup_folder
        #       - aws s3 rm --recursive s3://$APP_BUCKET
        #       - aws s3 cp --recursive ./dist s3://$APP_BUCKET
        #       - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
